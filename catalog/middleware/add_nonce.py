import re


class AddNonceToScriptsMiddleware:
    """This middleware class adds the CSP nonce to every <script> html element if not already present."""
    def __init__(self, get_response):
        self.get_response = get_response

    def __call__(self, request):
        response = self.get_response(request)
        if 'text/html' in response.get('Content-Type', ''):
            # Getting the nonce random value generated by django-csp middleware
            nonce = getattr(request, 'csp_nonce', '')
            if nonce:
                script_tag_pattern = r'<script(| (?![^>]* nonce=)([^>]*))>'  # No need to sub if nonce already there
                replacement = rf'<script\1 nonce="{nonce}">'
                response.content = re.sub(
                    script_tag_pattern,
                    replacement,
                    response.content.decode('utf-8'),
                    flags=re.IGNORECASE
                ).encode('utf-8')
        return response
