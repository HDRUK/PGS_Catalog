# Generated by Django 4.2.6 on 2023-10-24 17:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CurationCurator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Curator Name')),
            ],
        ),
        migrations.CreateModel(
            name='CurationPublicationAnnotation',
            fields=[
                ('num', models.IntegerField(primary_key=True, serialize=False, verbose_name='PGS Literature Triage (PGL)')),
                ('id', models.CharField(db_index=True, max_length=30, verbose_name='PGS Literature Triage ID (PGL)')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Creation Date')),
                ('study_name', models.CharField(db_index=True, max_length=50, verbose_name='Study Name')),
                ('pgp_id', models.CharField(blank=True, db_index=True, max_length=30, null=True, verbose_name='PGS Publication/Study ID (PGP)')),
                ('doi', models.CharField(blank=True, max_length=100, null=True, verbose_name='digital object identifier (doi)')),
                ('PMID', models.IntegerField(blank=True, null=True, verbose_name='PubMed ID (PMID)')),
                ('journal', models.CharField(blank=True, max_length=100, null=True, verbose_name='Journal Name')),
                ('title', models.TextField(blank=True, null=True, verbose_name='Title')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Year of Submission')),
                ('first_level_curation_status', models.CharField(blank=True, choices=[('Author submission', 'Author submission'), ('Awaiting access', 'Awaiting access'), ('Awaiting curation (AS)', 'Awaiting curation (AS)'), ('Awaiting curation', 'Awaiting curation'), ('Contact author', 'Contact author'), ('Curation done', 'Curation done'), ('Curation done (AS)', 'Curation done (AS)'), ('Determined ineligible', 'Determined ineligible'), ('Outstanding curation query', 'Outstanding curation query'), ('Pending author response - follow up required', 'Pending author response - follow up required'), ('Pending author response', 'Pending author response'), ('Undergoing curation', 'Undergoing curation')], default='Awaiting curation', max_length=50, null=True, verbose_name='First Level Curation Status')),
                ('first_level_date', models.DateField(blank=True, null=True, verbose_name='First Level Curation Date')),
                ('first_level_comment', models.TextField(blank=True, default='', null=True, verbose_name='First Level Curation Comment')),
                ('second_level_curation_status', models.CharField(blank=True, choices=[('Awaiting curation', 'Awaiting curation'), ('Curation done', 'Curation done'), ('Determined ineligible', 'Determined ineligible'), ('Outstanding curation query', 'Outstanding curation query'), ('Pending author response', 'Pending author response'), ('Undergoing curation', 'Undergoing curation')], default=None, max_length=50, null=True, verbose_name='Second Level Curation Status')),
                ('second_level_date', models.DateField(blank=True, null=True, verbose_name='Second Level Curation Date')),
                ('second_level_comment', models.TextField(blank=True, default='', null=True, verbose_name='Second Level Curation Comment')),
                ('curation_status', models.CharField(blank=True, choices=[('Abandoned/Ineligible', 'Abandoned/Ineligible'), ('Pending author response', 'Pending author response'), ('Awaiting L1', 'Awaiting L1'), ('Awaiting L2', 'Awaiting L2'), ('Curated - Awaiting Import', 'Curated - Awaiting Import'), ('Imported - Awaiting Release', 'Imported - Awaiting Release'), ('Released', 'Released'), ('Embargo Curated - Awaiting Import', 'Embargo Curated - Awaiting Import'), ('Embargo Imported - Awaiting Release', 'Embargo Imported - Awaiting Release'), ('Retired', 'Retired')], default='Awaiting L1', max_length=50, null=True, verbose_name='Curation Status')),
                ('eligibility', models.BooleanField(default=True, verbose_name='Paper eligibility')),
                ('eligibility_dev_score', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No'), ('MR', 'MR')], max_length=50, null=True, verbose_name='Develop a new score')),
                ('eligibility_eval_score', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No')], max_length=50, null=True, verbose_name='Evaluate existing score')),
                ('eligibility_external_valid', models.CharField(blank=True, choices=[('y', 'Yes'), ('y (no dev)', 'Yes (no dev)'), ('y (eval only)', 'Yes (eval only)'), ('n', 'No'), ('NA', 'NA'), ('unsure', 'Unsure')], default='NA', max_length=50, null=True, verbose_name='External validation (dev and eval in different sample?)')),
                ('eligibility_trait_matching', models.CharField(blank=True, choices=[('perfect match', 'perfect match'), ('related', 'related'), ('loosely related', 'loosely related'), ('unmatched', 'unmatched')], max_length=50, null=True, verbose_name='Trait matching')),
                ('eligibility_score_provided', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No'), ('partial', 'Partial'), ('possibly', 'Possibly'), ('NA', 'NA'), ('unsure', 'Unsure')], max_length=50, null=True, verbose_name='Score provided')),
                ('eligibility_description', models.TextField(blank=True, default='', null=True, verbose_name='Eligibility Comment')),
                ('author_submission', models.BooleanField(default=False, verbose_name='Author Submission')),
                ('embargoed', models.BooleanField(default=False, verbose_name='Embargoed Study')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release Date')),
                ('reported_trait', models.TextField(blank=True, null=True, verbose_name='Reported Trait(s)')),
                ('gwas_and_pgs', models.CharField(blank=True, max_length=100, null=True, verbose_name='GWAS + PGS')),
                ('comment', models.TextField(blank=True, default='', null=True, verbose_name='Curation Comments')),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('high', 'High')], default='normal', max_length=50, verbose_name='Curation priority')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Created On')),
                ('last_modified_on', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Last Modified On')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('first_level_curator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='curator_level1_name', to='curation_tracker.curationcurator', verbose_name='First Level Curator Name')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
                ('second_level_curator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='curator_level2_name', to='curation_tracker.curationcurator', verbose_name='Second Level Curator Name')),
                ('third_level_curator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='third_level_curator_name', to='curation_tracker.curationcurator', verbose_name='Third Level Curator')),
            ],
            options={
                'get_latest_by': 'num',
            },
        ),
    ]
